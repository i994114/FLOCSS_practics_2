// ==============================
// sassの使い方
// ==============================
// sass（サス）は「プリプロセッサー」や「メタ言語」とも呼ばれる
// 書き方は{}を使わないsass記法と普通のcssと同じ{}を使うscss記法の２種類
// 他にも「Less（レス）」なんてものも一時流行ったがあまり使われず
// https://webukatu.com/wordpress/blog/1633

// ==============================
// sassのメリット
// ==============================
// 1.コンポーネントごとにまとめられるので保守性が上がる
// 2.いちいち同じセレクタを書かなくていいので開発速度が上がる
// 3.見やすくてバグが発生しにくい

// ==============================
// sassの特徴
// ==============================
// 1.ネスト（入れ子構造）で書く
// 2.変数が使える
// 3.関数のようなmixinというものが使える
// 4.インポートが使える
//   @import “./mixins.scss”
// 他にも下記サイトのように色々な機能があるが、上記だけ覚えておけばOK
// https://cartman0.hatenablog.com/entry/2015/07/17/060125

// ==============================
// sassの使い方
// ==============================
// 1.拡張子はscss
// 2.cssへコンパイルする必要があるので、コンパイル用のライブラリを入れる（色々ある）
// 3.コンパイルしてcssをhtmlでいつもと同じ様に読み込むだけ


// ==============================
// 変数
// ==============================
$font-color_default: #777;
$font-color_date: #e37b89; // TODO:リファクタ必要
$color_corp: #e3a8b1;
$font-color_sub1: #b6a489;
$font-family_group: Quicksand, 游ゴシック体, "Yu Gothic", YuGothic, "ヒラギノ角ゴシック Pro", "Hiragino Kaku Gothic Pro", メイリオ, Meiryo, Osaka, "ＭＳ Ｐゴシック", "MS PGothic", sans-serif;

$site-width: 980px;

$font-size_s: 12px;
$font-size_m: 14px;
$font-size_default: 16px;
$font-size_l: 18px;
$font-size_xl: 24px;
$font-size_xxl: 30px;
$font-size_3l: 38px;

$space_s: 5px;
$space_m: 10px;
$space_l: 15px;
$space_xl: 20px;
$space_xxl: 30px;
$space_3l: 40px;

$font-family_corp: 'Amatic SC', cursive;

$main-color: #f8f7fc;

// メディアクエリのブレークポイント設定

//@media screen and (max-width: 414px){
//  .btn{
//    font-size: .7em;
//  }
//}

// 通常、変数として設定しておくと後々変更しやすくて便利
//  !defaultはすでに変数に値が入っていた場合は何もせず、変数に値が入っていない時に割り当てられるもの
// https://hail2u.net/blog/webdesign/how-to-use-bang-default-flag-in-sass-and-how-it-works.html
//$breakpoint-sm: 400px !default;
//$breakpoint-md: 768px !default;
//$breakpoint-lg: 1000px !default;

// マップ型変数を使うと便利
$breakpoints: (
  'sm': 'screen and (max-width: 414px)',
  'md': 'screen and (max-width: 768px)',
  'lg': 'screen and (max-width: 1000px)',
  'xl': 'screen and (max-width: 1200px)',
) !default;

// ==============================
// mixin
// ==============================
// @mixinは関数のようなものを作れる
// https://www.webcreatorbox.com/tech/sass-mixin
// map-get()の第一引数に変数名、第二引数にマップ型のキーを渡すと、マップ型の値が返る
// #{}は「インターポーレーション」といって、演算できない箇所、変数使えない箇所でも使えるようにするものcalcなどでよく使う
// http://book.scss.jp/code/c4/08.html
@mixin mq($breakpoint: sm) {
  @media #{map-get($breakpoints, $breakpoint)} {
    @content;
  }
}
@mixin ipad($breakpoint: md) {
  @media #{map-get($breakpoints, $breakpoint)} {
    @content;
  }
}

// ==============================
// ファイル読み込み
// ==============================
//----------
//foundation
//----------
@import '../scss/foundation/_base.scss';
@import '../scss/foundation/_reset.scss';
//----------
//layout
//----------
@import '../scss/layout/_header.scss';
@import '../scss/layout/_hero.scss';
@import '../scss/layout/_container.scss';
//----------
//object
//----------
//component
@import '../scss/object/component/_container.scss';
@import '../scss/object/component/_containerTitle.scss';
@import '../scss/object/component/_news.scss';
@import '../scss/object/component/_btn.scss';
@import '../scss/object/component/_form.scss';
@import '../scss/object/component/_input.scss';

//project
@import '../scss/object/project/_header.scss';
@import '../scss/object/project/_hero.scss';
@import '../scss/object/project/_news.scss';

//utility
@import '../scss/object/utility/_br.scss';
@import '../scss/object/utility/_color.scss';
@import '../scss/object/utility/_margin.scss';



// ==================================
// container
// ==================================





//もともとの記述↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
.container {
  width: $site-width;
  @include ipad() {
    width: 768px;
  }
  @include mq() {
    width: 100%;
  }
  margin-left: auto;
  margin-right: auto;
  padding-top: 80px;
  padding-bottom: 120px;
  &-fluid {
    width: 100%;
  }
  &-title {
    font-family: $font-family_corp;
    text-align: center;
    font-size: $font-size_3l;
    margin-bottom: $space_3l;
    @include mq() {
      width: 70%;
      margin-left: auto;
      margin-right: auto;
    }
  }
  &-body {
    @include mq() {
      padding-left: $space_l;
      padding-right: $space_l;
    }
  }
  &-ornament {
    .container-title {
      &-decoration { // TODO: リファクタ必要（span以外を使うことも考えてclass名で指定すること） ok
        display: inline-block;
        background: #fff;
        padding: 0 10px;
        position: relative;
        z-index: 1;
      }
      &:before, &:after {
        border-top: 1px solid #2e1f1a;
        content: "";
        display: block;
        position: relative;
        z-index: 0;
      }
      &:before {
        top: 28px;
      }
      &:after {
        top: -28px;
      }
      &-lightGray {
        span {
          background: $main-color;
        }
      }
    }
  }
}



// ==================================
// panel
// ==================================
.panel {
  box-sizing: border-box;
  background: #fff;
  position: relative;
  transition: .5s;
  &-hover {
    display: inline-block;
    transition: .5s;
    &:hover {
      transform: scale(1.03);
      box-shadow: 0 0 10px rgba(0, 0, 0, .3);
      transition: .5s;
    }
  }
  &-border {
    border-radius: 5px;
    border: 5px solid #f6f5f4;
  }
  &-head, &-foot {
    padding: $space_m;
  }
  &-head {
    text-align: center;
    color: $color_corp;
  }
  &-active {
    border: 5px solid $color_corp;
  }
  &-badge {
    background: #e37b89;
    color: #fff;
    position: absolute;
    top: -20px;
    right: -20px;
    border-radius: 60px;
    width: 60px;
    height: 60px;
    text-align: center;
    line-height: 1.3em;
    padding: 15px 0;
    box-sizing: border-box;
    font-size: $font-size_s;
    transform: rotate(15deg);
    @include mq() {
      top: -20px;
      right: -13px;
    }
  }
  &-group {
    margin-right: -$space_l;
    @include ipad() {
      //course側のネガティブマージンを消す処理
      margin-right: 0;
    }
    @include mq() {
      margin-right: -$space_l;
    }
    &-float {
      overflow: hidden;
      .panel {
        @include mq() {
          &:nth-of-type(2) {
            margin-right: 0;
          }
          &:nth-of-type(6) {
            margin-right: 0;
          }
        }
        @include ipad() {
          &:nth-of-type(4) {
            margin-right: 0;
          }
          &:nth-of-type(8) {
            margin-right: 0;
          }
        }
      }
    }
    &-flex {
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;
      .panel {
        @include ipad() {
          &:nth-of-type(3) {
            margin-right: 0;
          }
        } 
      }
    }
    .panel {
      float: left;
      margin-right: $space_l;
      @include ipad() {
        margin-right: 20px;
      }
      margin-bottom: $space_l;
      box-sizing: border-box;
    }
  }
  &-staff {
    width: calc(25% - #{$space_l});
    @include mq() {
      width: calc(50% - #{$space_l});
    }
  }
  &-cource {
    width: calc(33.3% - #{$space_l});
    @include mq() {
      width: 100%;
      margin: 0 auto $space_l auto;
    }
  }
}

// ==================================
// footer
// ==================================
.footer {
  background: #555;
  color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 80px;
  @include mq() {
    font-size: $font-size_s;
  }
}

// ==================================
// Utility
// ==================================
.bgColor-main { // TODO:リファクタ必要（色が後から修正が入り、赤色になったら？）ok
  background: $main-color;
  box-shadow: 0px 0px 8px 2px #ddd inset;
}



.ft-corp {
  font-weight: bold;
  font-family: $font-family_corp;
}

.ft-l {
  font-size: $font-size_xl;
}

// 宿題その１：SP（スマホ）でハンバーガーメニューを開いて、メニューをクリックした際に自動でメニューが閉じる様にしてみよう！
// 宿題その２：iPad（768px）用のレイアウトも作成してみよう！（メニューボタンを非表示。.containerの横幅を100%に。右に出てしまう余白はなぜだろう？）